// Generated by CoffeeScript 1.3.1
var languageScramble, random, randomIndex, scrambleKey, shuffle, x,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

scrambleKey = function(scrambleInfo) {
  return "" + (scrambleInfo["native"].replace(/\W/g, '_')) + "-" + (scrambleInfo.foreign.replace(/\W/g, '_'));
};

randomIndex = function(array) {
  return Math.floor(Math.random() * array.length);
};

random = function(array) {
  if (!array) {
    return null;
  }
  if (!array.length) {
    return null;
  }
  if (array.length === 1) {
    return array[0];
  }
  return array[randomIndex(array)];
};

shuffle = function(array) {
  var current, tmp, top;
  top = array.length;
  if (!top) {
    return array;
  }
  while (top--) {
    current = Math.floor(Math.random() * (top + 1));
    tmp = array[current];
    array[current] = array[top];
    array[top] = tmp;
  }
  return array;
};

languageScramble = typeof exports !== "undefined" && exports !== null ? exports : provide('./lib/language_scramble', {});

languageScramble.getLevel = function(languageData, levelName) {
  var data, index, level, _i, _len, _ref;
  level = languageData.levels[levelName];
  _ref = level.data;
  for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
    data = _ref[index];
    data.id = scrambleKey(data);
  }
  return level;
};

languageScramble.ChunkHelper = (function() {

  ChunkHelper.name = 'ChunkHelper';

  function ChunkHelper(languages, levelName, puzzleData) {
    this.languages = languages;
    this.levelName = levelName;
    this.puzzleData = puzzleData;
    this.languageData = languageScramble.data[this.languages];
    this.level = languageScramble.getLevel(this.languageData, this.levelName);
  }

  ChunkHelper.prototype.allLevels = function() {
    var info, levelData, levelName, _ref, _ref1, _ref2, _ref3;
    info = [];
    _ref = this.languageData.levels;
    for (levelName in _ref) {
      levelData = _ref[levelName];
      info.push({
        languages: this.languages,
        id: levelName,
        title: levelData.title,
        subtitle: levelData.subtitle,
        percentComplete: ((_ref1 = this.puzzleData.levels) != null ? (_ref2 = _ref1[this.languages]) != null ? (_ref3 = _ref2[levelName]) != null ? _ref3.percentComplete : void 0 : void 0 : void 0) || 0
      });
    }
    return info;
  };

  ChunkHelper.prototype.displayLanguages = function() {
    return this.languageData.displayName;
  };

  return ChunkHelper;

})();

languageScramble.ViewHelper = (function() {

  ViewHelper.name = 'ViewHelper';

  ViewHelper.prototype.maxLevel = 7;

  function ViewHelper(_arg) {
    var puzzleData;
    this.el = _arg.el, puzzleData = _arg.puzzleData, this.languages = _arg.languages, this.go = _arg.go, this.saveProgress = _arg.saveProgress;
    this.clientY = __bind(this.clientY, this);

    this.clientX = __bind(this.clientX, this);

    this.puzzleData = JSON.parse(JSON.stringify(puzzleData));
    this.formatLevelLinks();
  }

  ViewHelper.prototype.$ = function(selector) {
    return $(selector, this.el);
  };

  ViewHelper.prototype.formatLevelLinks = function() {
    var height, percentComplete, _i, _len, _ref, _results;
    _ref = $('.footer .levels .level .percent_complete');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      percentComplete = _ref[_i];
      percentComplete = $(percentComplete);
      height = percentComplete.closest('.level').height() - 2;
      _results.push(percentComplete.css({
        height: height,
        marginTop: height * -1
      }));
    }
    return _results;
  };

  ViewHelper.prototype.setLevel = function(levelName) {
    this.levelName = levelName;
    this.languageData = languageScramble.data[this.languages];
    this.level = languageScramble.getLevel(this.languageData, this.levelName);
    this.options = this.level.data;
    if (!this.puzzleData.levels[this.languages][this.levelName]) {
      this.puzzleData.levels[this.languages][this.levelName] = {};
    }
    this.puzzleData.lastLevelPlayed = this.levelName;
    this.puzzleUpdates;
    this.saveProgress(this.puzzleData);
    this.orderedOptions = [];
    this.orderedOptionsIndex = null;
    this.setTitle();
    return this.setProgress();
  };

  ViewHelper.prototype.saveLevel = function() {
    var lastAnswerDuration, leftToGo, percentComplete, progress, progressIncrement, progressSection, _i, _len;
    this.answerTimes.push(new Date());
    lastAnswerDuration = this.answerTimes[this.answerTimes.length - 1] - this.answerTimes[this.answerTimes.length - 2];
    if (lastAnswerDuration < 2500 * this.scrambleInfo["native"].length) {
      this.puzzleData.levels[this.languages][this.levelName][this.scrambleInfo.id] += 1;
      progress = this.$(".progress_meter .bar .progress_section");
      progressIncrement = 100.0 / progress.length;
      leftToGo = 0;
      for (_i = 0, _len = progress.length; _i < _len; _i++) {
        progressSection = progress[_i];
        leftToGo += $(progressSection).css('opacity') * progressIncrement;
      }
      percentComplete = 100 - leftToGo;
      this.puzzleData.levels[this.languages][this.levelName].percentComplete = percentComplete;
      $("#level_link_" + this.levelName + " .percent_complete").width("" + percentComplete + "%");
    }
    return this.saveProgress(this.puzzleData);
  };

  ViewHelper.prototype.setTitle = function() {
    var _this = this;
    if ($('.header .level .title').html() !== this.level.title) {
      return $('.header .level').animate({
        opacity: 0,
        duration: 300,
        complete: function() {
          $('.header .level .languages').html(_this.languageData.displayLanguages);
          $('.header .level .title').html(_this.level.title);
          $('.header .level .subtitle').html(_this.level.subtitle);
          _this.positionTitle();
          return $('.header .level').animate({
            opacity: 1,
            duration: 300
          });
        }
      });
    } else {
      return this.positionTitle();
    }
  };

  ViewHelper.prototype.positionTitle = function() {
    var h1Space, halfTitleWidth, halfWidth, margin;
    halfWidth = this.$('.header').width() / 2;
    h1Space = this.$('.header h1').width() + parseInt(this.$('.header h1').css('marginLeft'));
    halfTitleWidth = this.$('.header .level').width() / 2;
    margin = halfWidth - h1Space - halfTitleWidth;
    return this.$('.header .level').css({
      marginLeft: margin
    });
  };

  ViewHelper.prototype.bindWindow = function() {
    var endDrag, moveDrag,
      _this = this;
    $(window).bind('keypress', function(e) {
      if (_this.clickAreaHasFocus || $('.opaque_screen').css('opacity') > 0) {
        return;
      }
      $('#clickarea')[0].focus();
      return $('#clickarea').trigger('keypress', e);
    });
    moveDrag = function(e) {
      if (!_this.dragging) {
        return;
      }
      if (e.preventDefault != null) {
        e.preventDefault();
      }
      if (_this.dragging.css('position') !== 'absolute') {
        if (_this.dragging[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/) != null) {
          _this.replaceLetterWithGuess(_this.dragging);
        } else {
          _this.replaceLetterWithBlank(_this.dragging);
        }
      }
      if (_this.dragPathX[_this.dragPathX.length - 1] !== _this.clientX(e)) {
        _this.dragPathX.push(_this.clientX(e));
      }
      if (_this.dragPathX[_this.dragPathY.length - 1] !== _this.clientY(e)) {
        _this.dragPathY.push(_this.clientY(e));
      }
      return _this.dragging.css({
        position: 'absolute',
        top: _this.clientY(e) - _this.dragAdjustmentY,
        left: _this.clientX(e) - _this.dragAdjustmentX
      });
    };
    endDrag = function(e, force) {
      var currentX, currentY, guess, lastX, lastY, x, y;
      if (!force && (!_this.dragPathX || !_this.dragPathY || _this.dragPathX.length <= 1 || _this.dragPathY.length <= 1)) {
        $.timeout(40, function() {
          if (_this.dragging != null) {
            return endDrag(e, true);
          }
        });
        return;
      }
      if (e.preventDefault != null) {
        e.preventDefault();
      }
      currentX = _this.dragPathX.pop();
      currentY = _this.dragPathY.pop();
      lastX = ((function() {
        var _i, _len, _ref, _results;
        _ref = this.dragPathX.reverse();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          x = _ref[_i];
          if (Math.abs(x - currentX) > 10) {
            _results.push(x);
          }
        }
        return _results;
      }).call(_this))[0] || currentX + 0.01;
      lastY = ((function() {
        var _i, _len, _ref, _results;
        _ref = this.dragPathY.reverse();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          y = _ref[_i];
          if (Math.abs(y - currentY) > 10) {
            _results.push(y);
          }
        }
        return _results;
      }).call(_this))[0] || currentY - 0.01;
      guess = _this.guessInPath(_this.dragging, lastX, lastY, currentX, currentY);
      _this.dragging.css({
        position: 'static'
      });
      if (guess != null) {
        _this.replaceGuessWithLetter(guess, _this.dragging);
      } else {
        _this.replaceBlankWithLetter(_this.dragging);
      }
      return _this.dragging = null;
    };
    $(window).bind('mousemove', moveDrag);
    $(window).bind('mouseup', endDrag);
    $(window).bind('touchmove', moveDrag);
    return $(window).bind('touchend', endDrag);
  };

  ViewHelper.prototype.bindKeyPress = function() {
    var lastPress,
      _this = this;
    this.clickAreaHasFocus = false;
    $('#clickarea').bind('focus', function() {
      return _this.clickAreaHasFocus = true;
    });
    $('#clickarea').bind('blur', function() {
      return _this.clickAreaHasFocus = false;
    });
    $('#clickarea').bind('keydown', function(e) {
      var guessedLetters, lastLetterAdded;
      if (e.keyCode === 8) {
        lastLetterAdded = _this.lettersAdded.pop();
        guessedLetters = $(".guesses .letter_" + lastLetterAdded);
        if (guessedLetters.length) {
          $(guessedLetters[guessedLetters.length - 1]).trigger('click');
        }
      }
    });
    lastPress = null;
    return $('#clickarea').bind('keypress', function(e) {
      var char, foreignChar, letter, nativeChar, openGuess;
      if (lastPress && new Date() - lastPress < 10) {
        return;
      }
      lastPress = new Date();
      openGuess = _this.$('.guesses .selected')[0] || _this.$(".guesses .guess")[0];
      if (openGuess == null) {
        return;
      }
      try {
        char = String.fromCharCode(e.keyCode).toLowerCase();
        foreignChar = openGuess.className.match(/actual_letter_(.)/)[1];
        if (foreignChar === 'é' || foreignChar === 'è' || foreignChar === 'ì' || foreignChar === 'ò' || foreignChar === 'ù' || foreignChar === 'à') {
          nativeChar = (function() {
            switch (foreignChar) {
              case 'à':
                return 'a';
              case 'é':
                return 'e';
              case 'è':
                return 'e';
              case 'ì':
                return 'i';
              case 'ò':
                return 'o';
              case 'ù':
                return 'u';
            }
          })();
          if (char === nativeChar) {
            char = foreignChar;
          }
        }
        letter = $(".scrambled ." + (_this.containerClassName(openGuess)) + " .letter_" + char)[0];
        if (!letter && (_this.activeLevel.match(/Hard/) != null)) {
          if (char.match(/\w|[^\x00-\x80]+/)) {
            letter = _this.createLetter(char);
            $(".scrambled ." + (_this.containerClassName(openGuess))).append(letter);
          }
        }
        $.timeout(10, function() {
          $('#clickarea').val('');
          return $('#clickarea').html('');
        });
      } catch (e) {
        return;
      }
      if (letter == null) {
        return;
      }
      return $(letter).trigger('click');
    });
  };

  ViewHelper.prototype.bindLetter = function(letter) {
    var click, startDrag,
      _this = this;
    this.dragging = null;
    this.dragAdjustmentX = 0;
    this.dragAdjustmentY = 0;
    this.dragPathX = [];
    this.dragPathY = [];
    click = function(e) {
      var alreadyDragged, containerClass, guess;
      if (_this.dragPathX.length > 1 || _this.dragPathY > 1) {
        return;
      }
      if (_this.dragging && _this.dragging.css('position') === 'absolute') {
        alreadyDragged = true;
        _this.dragging.css({
          position: 'static'
        });
        _this.dragging = null;
      }
      containerClass = _this.containerClassName(letter);
      if (letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/) != null) {
        _this.replaceLetterWithGuess(letter);
        return _this.replaceBlankWithLetter(letter);
      } else {
        guess = _this.$('.guesses .selected')[0] || _this.$(".guesses ." + containerClass + " .guess")[0];
        if (guess == null) {
          return;
        }
        if (!alreadyDragged) {
          _this.replaceLetterWithBlank(letter);
        }
        return _this.replaceGuessWithLetter(guess, letter);
      }
    };
    startDrag = function(e) {
      if (e.preventDefault != null) {
        e.preventDefault();
      }
      _this.dragging = letter;
      _this.dragPathX = [];
      _this.dragPathY = [];
      _this.dragAdjustmentX = _this.clientX(e) - letter.offset().left + _this.el.offset().left;
      return _this.dragAdjustmentY = _this.clientY(e) - letter.offset().top + _this.el.offset().top;
    };
    letter = $(letter);
    letter.attr({
      onclick: 'void(0)',
      ontouchstart: 'void(0)',
      ontouchend: 'void(0)',
      ontouchmove: 'void(0)'
    });
    letter.bind('click', click);
    letter.bind('touchend', click);
    letter.bind('mousedown', startDrag);
    return letter.bind('touchstart', startDrag);
  };

  ViewHelper.prototype.newScramble = function() {
    var boundary, displayWords, highlighted, sentence, _base, _i, _len, _name, _ref;
    this.answerTimes || (this.answerTimes = []);
    this.answerTimes.push(new Date());
    this.lettersAdded = [];
    this.scrambleInfo = this.selectOption();
    if (!this.scrambleInfo) {
      return;
    }
    (_base = this.puzzleData.levels[this.languages][this.levelName])[_name = this.scrambleInfo.id] || (_base[_name] = 1);
    displayWords = this.$('.display_words');
    if ((this.scrambleInfo["" + this.displayLevel + "Sentence"] != null) && this.scrambleInfo["" + this.displayLevel + "Sentence"].length) {
      sentence = this.scrambleInfo["" + this.displayLevel + "Sentence"];
    } else {
      sentence = this.scrambleInfo[this.displayLevel];
    }
    sentence = " " + sentence + " ";
    highlighted = this.scrambleInfo[this.displayLevel];
    _ref = [' ', '?', ','];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      boundary = _ref[_i];
      sentence = sentence.replace(" " + highlighted + boundary, " <span class='highlighted'>" + highlighted + "</span>" + boundary);
    }
    displayWords.html(sentence);
    this.createGuesses();
    return this.createScramble();
  };

  ViewHelper.prototype.selectOption = function() {
    var i, incomplete, level, minLevel, option, optionLevel, options, optionsToAdd, possibleLevels, shuffledOptions, _i, _j, _k, _l, _len, _len1, _len2, _m, _ref, _ref1;
    this.orderedOptions || (this.orderedOptions = []);
    if (this.orderedOptionsIndex != null) {
      this.orderedOptionsIndex += 1;
    } else {
      this.orderedOptionsIndex = 0;
    }
    if (this.orderedOptions[this.orderedOptionsIndex] != null) {
      this.setStage();
      return this.orderedOptions[this.orderedOptionsIndex];
    }
    optionsToAdd = [[], [], [], [], [], [], []];
    minLevel = this.maxLevel;
    _ref = this.options;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      option = _ref[_i];
      if (__indexOf.call(this.orderedOptions.slice(-4), option) >= 0) {
        continue;
      }
      optionLevel = this.puzzleData.levels[this.languages][this.levelName][option.id] || 1;
      optionsToAdd[optionLevel] || (optionsToAdd[optionLevel] = []);
      optionsToAdd[optionLevel].push(option);
      if (optionLevel < minLevel) {
        minLevel = optionLevel;
      }
    }
    if (minLevel === this.maxLevel) {
      incomplete = (function() {
        var _j, _len1, _ref1, _results;
        _ref1 = this.options;
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          option = _ref1[_j];
          if ((this.puzzleData.levels[this.languages][this.levelName][option.id] || 1) < this.maxLevel) {
            _results.push(option);
          }
        }
        return _results;
      }).call(this);
      if (incomplete.length) {
        for (_j = 0, _len1 = incomplete.length; _j < _len1; _j++) {
          option = incomplete[_j];
          this.orderedOptions.push(option);
        }
        return this.orderedOptions[this.orderedOptionsIndex];
      } else {
        this.nextLevel();
        return false;
      }
    }
    possibleLevels = [minLevel, minLevel];
    if (optionsToAdd[minLevel].length > 4) {
      if (optionsToAdd[minLevel].length < this.options.length / (3 / 2)) {
        possibleLevels.push(minLevel + 1);
      }
      if (optionsToAdd[minLevel].length < this.options.length / 2) {
        for (i = _k = 0; _k <= 1; i = ++_k) {
          possibleLevels.push(minLevel + i);
        }
      }
      if (optionsToAdd[minLevel].length < this.options.length / 3) {
        for (i = _l = 0; _l <= 2; i = ++_l) {
          possibleLevels.push(minLevel + i);
        }
      }
    }
    level = random(possibleLevels);
    if (!optionsToAdd[level] || !optionsToAdd[level].length) {
      level = ((function() {
        var _results;
        _results = [];
        for (level in optionsToAdd) {
          options = optionsToAdd[level];
          if (options.length) {
            _results.push(level);
          }
        }
        return _results;
      })())[0];
    }
    shuffledOptions = shuffle(optionsToAdd[level]);
    _ref1 = shuffledOptions.slice(0, 3);
    for (_m = 0, _len2 = _ref1.length; _m < _len2; _m++) {
      option = _ref1[_m];
      this.orderedOptions.push(option);
    }
    switch (level) {
      case 6:
        this.activeLevel = 'foreignHard';
        break;
      case 5:
        this.activeLevel = 'nativeHard';
        break;
      case 4:
        this.activeLevel = 'foreignMedium';
        break;
      case 3:
        this.activeLevel = 'nativeMedium';
        break;
      case 2:
        this.activeLevel = 'foreign';
        break;
      case 1:
        this.activeLevel = 'native';
        break;
      default:
        this.activeLevel = 'foreignHard';
    }
    this.activeType = this.activeLevel.replace(/Medium/, '').replace(/Hard/, '');
    this.displayLevel = this.activeType.match(/native/) ? 'foreign' : 'native';
    this.setStage();
    return this.orderedOptions[this.orderedOptionsIndex];
  };

  ViewHelper.prototype.createGuesses = function() {
    var container, group, guesses, index, letter, runningTotal, wordGroup, wordGroups, _i, _j, _len, _len1, _results;
    guesses = this.$('.guesses');
    this.clearContainer(guesses);
    wordGroups = this.separateIntoWordGroups(this.scrambleInfo[this.activeType]);
    _results = [];
    for (index = _i = 0, _len = wordGroups.length; _i < _len; index = ++_i) {
      group = wordGroups[index];
      wordGroup = this.createWordGroup(index);
      if (!container || runningTotal + group.length > 18) {
        if (container) {
          this.positionContainer(container);
        }
        container = this.createContainer();
        runningTotal = 0;
      }
      for (_j = 0, _len1 = group.length; _j < _len1; _j++) {
        letter = group[_j];
        wordGroup.append(letter.match(/\w|[^\x00-\x80]+/) != null ? this.createGuess(letter) : this.createSpace(letter));
      }
      runningTotal += group.length;
      container.append(wordGroup);
      guesses.append(container);
      if (index === wordGroups.length - 1) {
        _results.push(this.positionContainer(container));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  ViewHelper.prototype.createScramble = function() {
    var container, group, index, letter, runningTotal, scrambled, wordGroup, wordGroups, _i, _j, _len, _len1, _ref, _results;
    scrambled = this.$('.scrambled');
    this.clearContainer(scrambled);
    wordGroups = this.separateIntoWordGroups(this.scrambleInfo[this.activeType]);
    _results = [];
    for (index = _i = 0, _len = wordGroups.length; _i < _len; index = ++_i) {
      group = wordGroups[index];
      wordGroup = this.createWordGroup(index);
      if (!container || runningTotal + group.length > 18) {
        if (container) {
          this.positionContainer(container);
        }
        container = this.createContainer();
        runningTotal = 0;
      } else {
        wordGroup.append(this.createSpace(' '));
        runningTotal += 1;
      }
      _ref = this.shuffleWord(this.modifyScramble(group.join('')));
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        letter = _ref[_j];
        if (letter.match(/\w|[^\x00-\x80]+/)) {
          wordGroup.append(this.createLetter(letter));
        }
      }
      runningTotal += group.length;
      container.append(wordGroup);
      scrambled.append(container);
      if (index === wordGroups.length - 1) {
        _results.push(this.positionContainer(container));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  ViewHelper.prototype.createContainer = function(index) {
    var container;
    container = $(document.createElement("DIV"));
    return container.addClass('container');
  };

  ViewHelper.prototype.positionContainer = function(container) {
    container.width(container.width());
    return container.css({
      float: 'none',
      height: container.height()
    });
  };

  ViewHelper.prototype.createWordGroup = function(index) {
    var wordGroup;
    wordGroup = $(document.createElement("DIV"));
    wordGroup.addClass('word_group');
    return wordGroup.addClass("color" + (index + 1));
  };

  ViewHelper.prototype.clearContainer = function(container) {
    return container.find('.container, .correct, .guess, .letter, .space').remove();
  };

  ViewHelper.prototype.createGuess = function(letter) {
    var guess,
      _this = this;
    guess = $(document.createElement("DIV"));
    guess.addClass('guess');
    guess.addClass("actual_letter_" + letter);
    return guess.bind('click', function() {
      if (guess.hasClass('selected')) {
        return guess.removeClass('selected');
      } else {
        _this.$('.guesses .guess').removeClass('selected');
        return guess.addClass('selected');
      }
    });
  };

  ViewHelper.prototype.createSpace = function(letter) {
    var space;
    space = $(document.createElement("DIV"));
    space.addClass('space');
    return space.html(letter);
  };

  ViewHelper.prototype.separateIntoWordGroups = function(letters, halfRow) {
    var firstWord, firstWordLetter, fullRow, fullRowRemaining, group, groups, letter, nextGroup, optimalLetters, previousGroup, _i, _j, _len, _len1;
    if (halfRow == null) {
      halfRow = 9;
    }
    fullRow = halfRow * 2;
    groups = [[]];
    for (_i = 0, _len = letters.length; _i < _len; _i++) {
      letter = letters[_i];
      optimalLetters = fullRowRemaining ? fullRowRemaining : halfRow;
      group = groups[groups.length - 1];
      if (group.length > optimalLetters && group.join().match(/\s/)) {
        groups.push(nextGroup = []);
        while (!(group[group.length - 1].match(/\s/) != null)) {
          nextGroup.push(group.pop());
        }
        if (fullRowRemaining) {
          fullRowRemaining = null;
          if ((previousGroup = groups[groups.length - 2])) {
            while ((firstWord = group.join().split('/\s/')[0]).length !== group.length && group.length - firstWord.length > groups[groups.length - 2].length) {
              group.replace("" + firstWord + " ", '');
              for (_j = 0, _len1 = firstWord.length; _j < _len1; _j++) {
                firstWordLetter = firstWord[_j];
                previousGroup.push(firstWordLetter);
              }
            }
          }
        } else {
          fullRow - group.length;
        }
        group = nextGroup.reverse();
      }
      group.push(letter);
    }
    return groups;
  };

  ViewHelper.prototype.shuffleWord = function(word) {
    var current, letter, shuffled, tmp, top, wordArray;
    top = word.length;
    if (!top) {
      return '';
    }
    if (top === 1) {
      return word;
    }
    if (top === 2) {
      return ((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = word.length; _i < _len; _i++) {
          letter = word[_i];
          _results.push(letter);
        }
        return _results;
      })()).reverse().join('');
    }
    wordArray = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = word.length; _i < _len; _i++) {
        letter = word[_i];
        _results.push(letter);
      }
      return _results;
    })();
    while (top--) {
      current = Math.floor(Math.random() * (top + 1));
      tmp = wordArray[current];
      wordArray[current] = wordArray[top];
      wordArray[top] = tmp;
    }
    shuffled = wordArray.join('');
    if (shuffled === word) {
      shuffled = this.shuffleWord(shuffled);
    }
    return shuffled;
  };

  ViewHelper.prototype.createLetter = function(letter) {
    var letterContainer;
    letterContainer = $(document.createElement("DIV"));
    letterContainer.addClass('letter');
    letterContainer.addClass("letter_" + letter);
    letterContainer.html(letter);
    this.bindLetter(letterContainer);
    return letterContainer;
  };

  ViewHelper.prototype.replaceLetterWithBlank = function(letter) {
    var blankLetter;
    blankLetter = $(document.createElement("DIV"));
    blankLetter.addClass('blank_letter').addClass(letter.html());
    return blankLetter.insertBefore(letter, this.$(".scrambled ." + (this.containerClassName(letter))));
  };

  ViewHelper.prototype.replaceBlankWithLetter = function(letter) {
    var blankLetter, containerClass;
    containerClass = this.containerClassName(letter);
    blankLetter = this.$(".scrambled ." + containerClass + " ." + (letter.html()))[0];
    if (blankLetter == null) {
      return;
    }
    blankLetter = $(blankLetter);
    letter.remove().insertBefore(blankLetter, this.$(".scrambled ." + containerClass));
    if (letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/) != null) {
      letter.removeClass(letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/)[0]);
      letter.removeClass('wrong_letter');
      letter.removeClass('correct_letter');
    }
    blankLetter.remove();
    return this.bindLetter(letter);
  };

  ViewHelper.prototype.replaceGuessWithLetter = function(guess, letter) {
    var guessLetter, letterPosition;
    $('.guesses .hidden_message').hide();
    $('.guesses .space').css({
      visibility: 'visible'
    });
    guess = $(guess);
    letter.remove().insertBefore(guess, this.$('.guesses'));
    letter.addClass(guess[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/)[0]);
    guess.remove();
    this.bindLetter(letter);
    this.lettersAdded.push(letter.html());
    letterPosition = guess[0].className.indexOf('actual_letter_') + 'actual_letter_'.length;
    guessLetter = guess[0].className.slice(letterPosition, letterPosition + 1 || 9e9);
    letter.addClass(letter.html() === guessLetter ? 'correct_letter' : 'wrong_letter');
    if (this.checkCorrectAnswer()) {
      return this.next();
    }
  };

  ViewHelper.prototype.replaceLetterWithGuess = function(letter) {
    var actualLetter, letterAddedIndex;
    letterAddedIndex = this.lettersAdded.indexOf(letter.html());
    this.lettersAdded.slice(letterAddedIndex, letterAddedIndex + 1);
    actualLetter = letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/)[1];
    this.createGuess(actualLetter).insertBefore(letter, this.$(".guesses ." + (this.containerClassName(letter))));
    if (letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/) != null) {
      letter.removeClass(letter[0].className.match(/actual_letter_(\w|[^\x00-\x80]+)/)[0]);
      letter.removeClass('wrong_letter');
      return letter.removeClass('correct_letter');
    }
  };

  ViewHelper.prototype.clientX = function(e) {
    return e.clientX || (e.targetTouches[0] ? e.targetTouches[0].pageX : null);
  };

  ViewHelper.prototype.clientY = function(e) {
    return e.clientY || (e.targetTouches[0] ? e.targetTouches[0].pageY : null);
  };

  ViewHelper.prototype.containerClassName = function(square) {
    return $(square).closest('.word_group')[0].className.match(/color\d+/)[0];
  };

  ViewHelper.prototype.guessInPath = function(letter, lastX, lastY, currentX, currentY) {
    var guess, guessDims, guessPosition, guesses, i, x, xSlope, y, ySlope, _i, _j, _len;
    letter = $(letter);
    xSlope = currentX - lastX;
    ySlope = lastY - currentY;
    if (Math.abs(xSlope) < Math.abs(ySlope)) {
      xSlope = xSlope / Math.abs(ySlope);
      ySlope = ySlope / Math.abs(ySlope);
    } else {
      ySlope = ySlope / Math.abs(xSlope);
      xSlope = xSlope / Math.abs(xSlope);
    }
    guesses = this.$(".guesses ." + (this.containerClassName(letter)) + " .guess");
    for (_i = 0, _len = guesses.length; _i < _len; _i++) {
      guess = guesses[_i];
      guess = $(guess);
      guessPosition = guess.offset();
      guessDims = guess.dim();
      for (i = _j = 2; _j <= 14; i = ++_j) {
        x = currentX + (xSlope * (((i % 12) - 2) * 10));
        y = currentY - (ySlope * (((i % 12) - 2) * 10));
        if (x < guessPosition.left) {
          continue;
        }
        if (x > guessPosition.left + guessDims.width) {
          continue;
        }
        if (y > guessPosition.top + guessDims.height) {
          continue;
        }
        if (y < guessPosition.top) {
          continue;
        }
        return guess;
      }
    }
    return null;
  };

  ViewHelper.prototype.checkCorrectAnswer = function() {
    return this.$('.guesses .letter, .guesses .space').map(function(html) {
      return $(html).html();
    }).join('') === this.scrambleInfo[this.activeType];
  };

  ViewHelper.prototype.modifyScramble = function(word) {
    var add, commonLetters, i, letter, _i;
    if (!(word.length < 6)) {
      return word;
    }
    commonLetters = (function() {
      var _i, _len, _ref, _results;
      _ref = 'etaoinshrdlumkpcd';
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        letter = _ref[_i];
        _results.push(letter);
      }
      return _results;
    })();
    add = 6 - word.length;
    if (add > 2) {
      add = 2;
    }
    for (i = _i = 0; 0 <= add ? _i < add : _i > add; i = 0 <= add ? ++_i : --_i) {
      word += commonLetters[Math.floor(Math.random() * commonLetters.length)];
    }
    return word;
  };

  ViewHelper.prototype.setStage = function() {
    this.$('.guesses').removeClass('hidden');
    this.$('.scrambled').removeClass('hidden');
    this.$('.scramble_content').removeClass('show_keyboard');
    if ((this.activeLevel.match(/Medium/) != null) || (this.activeLevel.match(/Hard/) != null)) {
      this.$('.guesses').addClass('hidden');
      this.$('.guesses .hidden_message').show();
    }
    if (this.activeLevel.match(/Hard/) != null) {
      this.$('.scrambled').addClass('hidden');
      this.$('.scrambled .hidden_message').show();
      return this.$('.scramble_content').addClass('show_keyboard');
    }
  };

  ViewHelper.prototype.setProgress = function() {
    var _this = this;
    if (!this.$(".progress_meter .bar ." + this.level.data[0].id).length) {
      return this.$('.progress_meter').animate({
        opacity: 0,
        duration: 300,
        complete: function() {
          var index, scramble, section, _i, _len, _ref, _results;
          _this.$('.progress_meter .bar .progress_section').remove();
          _ref = _this.level.data;
          _results = [];
          for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
            scramble = _ref[index];
            section = $(document.createElement("DIV"));
            section.addClass('progress_section');
            section.addClass(scramble.id);
            if ((index + 1) === _this.level.data.length) {
              section.css({
                borderRight: 'none'
              });
            }
            _this.$('.progress_meter .bar').append(section);
            _this.updateProgress();
            _results.push(_this.$('.progress_meter').animate({
              opacity: 1,
              duration: 300
            }));
          }
          return _results;
        }
      });
    } else {
      return this.updateProgress();
    }
  };

  ViewHelper.prototype.updateProgress = function() {
    var id, level, scrambleInfo, _i, _len, _ref, _results;
    _ref = this.level.data;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      scrambleInfo = _ref[_i];
      id = scrambleInfo.id;
      level = this.puzzleData.levels[this.languages][this.levelName][id];
      if (level) {
        if (level > this.maxLevel) {
          level = this.maxLevel;
        }
        _results.push(this.$(".progress_meter .bar ." + id).css({
          opacity: 1 - ((1 / this.maxLevel) * level)
        }));
      } else {
        _results.push(this.$(".progress_meter .bar ." + id).css({
          opacity: 1
        }));
      }
    }
    return _results;
  };

  ViewHelper.prototype.next = function() {
    var boundary, correct, correctSentence, displayedSentence, highlighted, nextShown, scrambled, showNext, _i, _len, _ref,
      _this = this;
    this.saveLevel();
    correct = $(document.createElement('DIV'));
    if ((this.scrambleInfo["" + this.activeType + "Sentence"] != null) && this.scrambleInfo["" + this.activeType + "Sentence"].length) {
      correctSentence = this.scrambleInfo["" + this.activeType + "Sentence"];
    } else {
      correctSentence = this.scrambleInfo[this.activeType];
    }
    correctSentence = " " + correctSentence + " ";
    highlighted = this.scrambleInfo[this.activeType];
    _ref = [' ', '?', ','];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      boundary = _ref[_i];
      correctSentence = correctSentence.replace(" " + highlighted + boundary, " <span class='highlighted'>" + highlighted + "</span>" + boundary);
    }
    correct.html(correctSentence);
    correct.addClass('correct');
    correct.css({
      opacity: 0
    });
    scrambled = this.$('.scrambled');
    this.clearContainer(scrambled);
    this.$('.scrambled .hidden_message').hide();
    this.$('.scrambled').css({
      width: null
    });
    scrambled.append(correct);
    displayedSentence = this.$('.display_words').html();
    nextShown = false;
    showNext = function() {
      if (nextShown) {
        return;
      }
      _this.el.unbind('click');
      _this.el.unbind('touchstart');
      $('#clickarea').unbind('keyup');
      nextShown = true;
      _this.setProgress();
      return _this.$('.foreign_words, .scrambled, .guesses').animate({
        opacity: 0,
        duration: 500,
        complete: function() {
          _this.$('.scrambled, .guesses').css({
            width: null,
            height: null
          });
          _this.newScramble();
          return _this.$('.foreign_words, .scrambled, .guesses').animate({
            opacity: 1,
            duration: 300,
            complete: function() {}
          });
        }
      });
    };
    return correct.animate({
      opacity: 1,
      duration: 500,
      complete: function() {
        $.timeout(500 + (30 * correctSentence.length), function() {
          return showNext();
        });
        _this.el.bind('click', function() {
          return showNext();
        });
        _this.el.bind('touchstart', function() {
          return showNext();
        });
        return $('#clickarea').bind('keyup', function(e) {
          return showNext();
        });
      }
    });
  };

  ViewHelper.prototype.nextLevel = function() {
    var message, nextLevel, resetLevel, showLevel,
      _this = this;
    nextLevel = this.languageData.levels[this.level.nextLevel];
    if (nextLevel != null) {
      this.$('#next_level .next_level_link').html(nextLevel.title);
      message = this.$('#next_level');
    }
    resetLevel = function() {
      if (confirm('Are you sure you want to reset this level?')) {
        _this.$('reset_level_link').unbind('click');
        _this.puzzleData.levels[_this.languages][_this.levelName] = {};
        _this.saveProgress(_this.puzzleData);
        return showLevel(_this.levelName);
      }
    };
    showLevel = function(levelName) {
      _this.$('#next_level .next_level_link').unbind('click');
      _this.setLevel(levelName);
      return _this.$('#next_level').animate({
        opacity: 0,
        duration: 500,
        complete: function() {
          _this.newScramble();
          return _this.$('.scramble_content').animate({
            opacity: 1,
            duration: 500
          });
        }
      });
    };
    return this.$('.scramble_content').animate({
      opacity: 0,
      duration: 500,
      complete: function() {
        message.css({
          top: 150,
          left: ($('.language_scramble').width() - _this.$('#next_level').width()) / 2
        });
        _this.$('#next_level .reset_level_link').bind('click', function() {
          return resetLevel();
        });
        _this.$('#next_level .next_level_link').bind('click', function() {
          return showLevel(_this.level.nextLevel);
        });
        return _this.$('#next_level').animate({
          opacity: 1,
          duration: 1000
        });
      }
    });
  };

  return ViewHelper;

})();

languageScramble.data = {
  english_italian: {
    displayName: "English - Italian",
    levels: {
      top10words: {
        title: 'Top 10 Words',
        subtitle: 'The 10 most frequently used Italian words.',
        nextLevel: 'top10phrases',
        data: [
          {
            "native": 'not',
            foreign: 'non',
            nativeSentence: 'that\'s not necessary',
            foreignSentence: 'non è necessario'
          }, {
            "native": 'of',
            foreign: 'di',
            nativeSentence: 'here is a list of options',
            foreignSentence: 'ecco un elenco di opzioni'
          }, {
            "native": 'what',
            foreign: 'che',
            nativeSentence: 'what luck',
            foreignSentence: 'che fortuna'
          }, {
            "native": 'is',
            foreign: 'è',
            nativeSentence: 'what day is it?',
            foreignSentence: 'che giorno è?'
          }, {
            "native": 'and',
            foreign: 'e',
            nativeSentence: 'big and tall',
            foreignSentence: 'grande e grosso'
          }, {
            "native": 'the',
            foreign: 'la',
            nativeSentence: 'drop the ball now',
            foreignSentence: 'cadere la palla ora'
          }, {
            "native": 'the',
            foreign: 'il',
            nativeSentence: 'how much does the book cost?',
            foreignSentence: 'quanto costa il libro?'
          }, {
            "native": 'a',
            foreign: 'un',
            nativeSentence: 'a little more',
            foreignSentence: 'un po più'
          }, {
            "native": 'for',
            foreign: 'per',
            nativeSentence: 'where is the food for dinner?',
            foreignSentence: 'dove è il cibo per la cena?'
          }, {
            "native": 'are',
            foreign: 'sono',
            nativeSentence: 'there are five houses on this road',
            foreignSentence: 'ci sono cinque case su questa strada'
          }
        ]
      },
      top10phrases: {
        title: 'Phrases For The Top 10 Words',
        subtitle: 'Phrases containing the 10 most frequently used Italian words',
        nextLevel: 'top25words',
        data: [
          {
            "native": 'that\'s not necessary',
            foreign: 'non è necessario'
          }, {
            "native": 'here is a list of options',
            foreign: 'ecco un elenco di opzioni'
          }, {
            "native": 'what luck',
            foreign: 'che fortuna'
          }, {
            "native": 'what day is it?',
            foreign: 'che giorno è?'
          }, {
            "native": 'big and tall',
            foreign: 'grande e grosso'
          }, {
            "native": 'drop the ball now',
            foreign: 'cadere la palla ora'
          }, {
            "native": 'how much does the book cost?',
            foreign: 'quanto costa il libro?'
          }, {
            "native": 'a little more',
            foreign: 'un po più'
          }, {
            "native": 'where is the food for dinner?',
            foreign: 'dove è il cibo per la cena?'
          }, {
            "native": 'there are five houses on this road',
            foreign: 'ci sono cinque case su questa strada'
          }
        ]
      },
      top25words: {
        title: 'Top 10 - 25 Words',
        subtitle: 'The 10 - 25 most frequently used Italian words',
        nextLevel: 'top25phrases',
        data: [
          {
            "native": 'i have',
            foreign: 'ho',
            nativeSentence: 'i have twenty dollars',
            foreignSentence: 'ho venti dollari'
          }, {
            "native": 'but',
            foreign: 'ma',
            nativeSentence: 'i was going to but i can not',
            foreignSentence: 'stavo andando ma non posso'
          }, {
            "native": 'he has',
            foreign: 'ha',
            nativeSentence: 'he has a big house',
            foreignSentence: 'ha una grande casa'
          }, {
            "native": 'with',
            foreign: 'con',
            nativeSentence: 'i\'m coming with you',
            foreignSentence: 'vengo con te'
          }, {
            "native": 'what',
            foreign: 'cosa',
            nativeSentence: 'what do you like to do?',
            foreignSentence: 'cosa ti piace fare?'
          }, {
            "native": 'if',
            foreign: 'se',
            nativeSentence: 'what if he wins?',
            foreignSentence: 'cosa succede se vince?'
          }, {
            "native": 'i',
            foreign: 'io',
            nativeSentence: 'i am going to the markets',
            foreignSentence: 'io vado ai mercati'
          }, {
            "native": 'how',
            foreign: 'come',
            nativeSentence: 'how are you?',
            foreignSentence: 'come stai?'
          }, {
            "native": 'there',
            foreign: 'ci',
            nativeSentence: 'there are three friends',
            foreignSentence: 'ci sono tre amici'
          }, {
            "native": 'this',
            foreign: 'questo',
            nativeSentence: 'this is fantastic',
            foreignSentence: 'questo è fantastico'
          }, {
            "native": 'here',
            foreign: 'qui',
            nativeSentence: 'come here',
            foreignSentence: 'vieni qui'
          }, {
            "native": 'you have',
            foreign: 'hai',
            nativeSentence: 'you have ten minutes',
            foreignSentence: 'hai dieci minuti'
          }, {
            "native": 'six',
            foreign: 'sei',
            nativeSentence: 'there are six doors',
            foreignSentence: 'ci sono sei porte'
          }, {
            "native": 'well',
            foreign: 'bene',
            nativeSentence: 'are you well?',
            foreignSentence: 'stai bene?'
          }, {
            "native": 'yes',
            foreign: 'sì',
            nativeSentence: 'yes, you can',
            foreignSentence: 'sì, è possibile'
          }
        ]
      },
      top25phrases: {
        title: 'Phrases For The Top 10 - 25 Words',
        subtitle: 'Phrases for 10 - 25 most frequently used Italian words',
        nextLevel: 'top50words',
        data: [
          {
            "native": 'i have twenty dollars',
            foreign: 'ho venti dollari'
          }, {
            "native": 'i was going to but i can not',
            foreign: 'stavo andando ma non posso'
          }, {
            "native": 'he has a big house',
            foreign: 'ha una grande casa'
          }, {
            "native": 'i\'m coming with you',
            foreign: 'vengo con te'
          }, {
            "native": 'what do you like to do?',
            foreign: 'cosa ti piace fare?'
          }, {
            "native": 'what if he wins?',
            foreign: 'cosa succede se vince?'
          }, {
            "native": 'i am going to the markets',
            foreign: 'io vado ai mercati'
          }, {
            "native": 'how are you?',
            foreign: 'come stai?'
          }, {
            "native": 'there are three friends',
            foreign: 'ci sono tre amici'
          }, {
            "native": 'this is fantastic',
            foreign: 'questo è fantastico'
          }, {
            "native": 'come here',
            foreign: 'vieni qui'
          }, {
            "native": 'you have ten minutes',
            foreign: 'hai dieci minuti'
          }, {
            "native": 'there are six doors',
            foreign: 'ci sono sei porte'
          }, {
            "native": 'are you well?',
            foreign: 'stai bene?'
          }, {
            "native": 'yes, you can',
            foreign: 'sì, è possibile'
          }
        ]
      },
      top50words: {
        title: 'Top 25 - 50 Words',
        subtitle: 'The 25 - 50 most frequently used Italian words',
        nextLevel: 'top50phrases',
        data: [
          {
            "native": 'more',
            foreign: 'più',
            nativeSentence: 'a little more',
            foreignSentence: 'un po più'
          }, {
            "native": 'my',
            foreign: 'mio',
            nativeSentence: 'my brother is seven years old',
            foreignSentence: 'mio fratello ha sette anni'
          }, {
            "native": 'because',
            foreign: 'perché',
            nativeSentence: 'because i want to',
            foreignSentence: 'perché voglio'
          }, {
            "native": 'why',
            foreign: 'perché',
            nativeSentence: 'why do you want to go?',
            foreignSentence: 'perché vuoi andare?'
          }, {
            "native": 'she',
            foreign: 'lei',
            nativeSentence: 'she leaves tomorrow',
            foreignSentence: 'lei parte domani'
          }, {
            "native": 'only',
            foreign: 'solo',
            nativeSentence: 'it was only fifteen minutes',
            foreignSentence: 'era solo quindici minuti'
          }, {
            "native": 'it was',
            foreign: 'era',
            nativeSentence: 'it was thirty years ago',
            foreignSentence: 'era trent\'anni fa'
          }, {
            "native": 'all',
            foreign: 'tutti',
            nativeSentence: 'all of the king\'s horses',
            foreignSentence: 'tutti i cavalli del re'
          }, {
            "native": 'so-so',
            foreign: 'così-così',
            nativeSentence: 'i am feeling so-so',
            foreignSentence: 'mi sento così-così'
          }, {
            "native": 'hello',
            foreign: 'ciao',
            nativeSentence: 'hello my friend',
            foreignSentence: 'ciao amico mio'
          }, {
            "native": 'this',
            foreign: 'questo',
            nativeSentence: 'this is the best food',
            foreignSentence: 'questo è il miglior cibo'
          }, {
            "native": 'to do',
            foreign: 'fare',
            nativeSentence: 'if you want to do this',
            foreignSentence: 'se si vuole fare questo'
          }, {
            "native": 'when',
            foreign: 'quando',
            nativeSentence: 'when is the show?',
            foreignSentence: 'quando è lo spettacolo?'
          }, {
            "native": 'now',
            foreign: 'ora',
            nativeSentence: 'drop the ball now',
            foreignSentence: 'cadere la palla ora'
          }, {
            "native": 'you did',
            foreign: 'hai fatto',
            nativeSentence: 'you did your best',
            foreignSentence: 'hai fatto del tuo meglio'
          }, {
            "native": 'to be',
            foreign: 'essere',
            nativeSentence: 'i want to be an astronaut',
            foreignSentence: 'voglio essere un astronauta'
          }, {
            "native": 'never',
            foreign: 'mai',
            nativeSentence: 'i have never been to the coast',
            foreignSentence: 'non sono mai stato alla costa'
          }, {
            "native": 'who',
            foreign: 'chi',
            nativeSentence: 'who are you?',
            foreignSentence: 'chi sei?'
          }, {
            "native": 'or',
            foreign: 'o',
            nativeSentence: 'pizza or pasta',
            foreignSentence: 'pizza o la pasta'
          }, {
            "native": 'all',
            foreign: 'tutti',
            nativeSentence: 'he ate all of the cookies',
            foreignSentence: 'ha mangiato tutti i cookie'
          }, {
            "native": 'very',
            foreign: 'molto',
            nativeSentence: 'he is very old',
            foreignSentence: 'lui è molto vecchio'
          }, {
            "native": 'also',
            foreign: 'anche',
            nativeSentence: 'i also need two pencils',
            foreignSentence: 'ho anche bisogno di due matite'
          }, {
            "native": 'he said',
            foreign: 'ha detto',
            nativeSentence: 'he said go left',
            foreignSentence: 'ha detto andate a sinistra'
          }, {
            "native": 'that',
            foreign: 'quella',
            nativeSentence: 'that lady ate my cheese',
            foreignSentence: 'quella signora mangiato il mio formaggio'
          }, {
            "native": 'nothing',
            foreign: 'niente',
            nativeSentence: 'there was nothing there',
            foreignSentence: 'non c\'era niente'
          }
        ]
      },
      top50phrases: {
        title: 'Phrases For The Top 25 - 50 Words',
        subtitle: 'Phrases for the 25 - 50 most frequently used Italian words',
        nextLevel: 'top75words',
        data: [
          {
            "native": 'a little more',
            foreign: 'un po più'
          }, {
            "native": 'my brother is seven years old',
            foreign: 'mio fratello ha sette anni'
          }, {
            "native": 'because i want to',
            foreign: 'perché voglio'
          }, {
            "native": 'why do you want to go?',
            foreign: 'perché vuoi andare?'
          }, {
            "native": 'she leaves tomorrow',
            foreign: 'lei parte domani'
          }, {
            "native": 'it was only fifteen minutes',
            foreign: 'era solo quindici minuti'
          }, {
            "native": 'it was thirty years ago',
            foreign: 'era trent\'anni fa'
          }, {
            "native": 'all of the king\'s horses',
            foreign: 'tutti i cavalli del re'
          }, {
            "native": 'i am feeling so-so',
            foreign: 'mi sento così-così'
          }, {
            "native": 'hello my friend',
            foreign: 'ciao amico mio'
          }, {
            "native": 'this is the best food',
            foreign: 'questo è il miglior cibo'
          }, {
            "native": 'if you want to do this',
            foreign: 'se si vuole fare questo'
          }, {
            "native": 'when is the show?',
            foreign: 'quando è lo spettacolo?'
          }, {
            "native": 'drop the ball now',
            foreign: 'cadere la palla ora'
          }, {
            "native": 'you did your best',
            foreign: 'hai fatto del tuo meglio'
          }, {
            "native": 'i want to be an astronaut',
            foreign: 'voglio essere un astronauta'
          }, {
            "native": 'i have never been to the coast',
            foreign: 'non sono mai stato alla costa'
          }, {
            "native": 'who are you?',
            foreign: 'chi sei?'
          }, {
            "native": 'pizza or pasta',
            foreign: 'pizza o la pasta'
          }, {
            "native": 'he ate all of the cookies',
            foreign: 'ha mangiato tutti i cookie'
          }, {
            "native": 'he is very old',
            foreign: 'lui è molto vecchio'
          }, {
            "native": 'i also need two pencils',
            foreign: 'ho anche bisogno di due matite'
          }, {
            "native": 'he said go left',
            foreign: 'ha detto andate a sinistra'
          }, {
            "native": 'that lady ate my cheese',
            foreign: 'quella signora mangiato il mio formaggio'
          }, {
            "native": 'there was nothing there',
            foreign: 'non c\'era niente'
          }
        ]
      },
      top75words: {
        title: 'Top 50 - 75 Words',
        subtitle: 'The 50 - 75 most frequently used Italian words',
        nextLevel: 'top75phrases',
        data: [
          {
            "native": 'to him',
            foreign: 'gli',
            nativeSentence: 'i will speak to him',
            foreignSentence: 'gli voglio parlare'
          }, {
            "native": 'everything',
            foreign: 'tutto',
            nativeSentence: 'the one who has everything can lose everything',
            foreignSentence: 'chi ha tutto può perdere tutto'
          }, {
            "native": 'of',
            foreign: 'della',
            nativeSentence: 'we celebrate mother\'s day in honor of our mothers',
            foreignSentence: 'celebriamo la festa della mamma in onore delle nostre madri'
          }, {
            "native": 'so',
            foreign: 'così',
            nativeSentence: 'what made her so sad?',
            foreignSentence: 'cosa l\'ha resa così triste?'
          }, {
            "native": 'my',
            foreign: 'mia',
            nativeSentence: 'my mother is older than my father',
            foreignSentence: 'mia madre è più vecchio di mio padre'
          }, {
            "native": 'neither',
            foreign: 'né',
            nativeSentence: 'he knows neither french nor german',
            foreignSentence: 'non sa né il francese né il tedesco'
          }, {
            "native": 'this',
            foreign: 'questa',
            nativeSentence: 'this house and this land are mine',
            foreignSentence: 'questa casa e questa terra sono mie'
          }, {
            "native": 'be',
            foreign: 'fare',
            nativeSentence: 'you must be careful not to drop the eggs',
            foreignSentence: 'dovete fare attenzione a non fare cadere le uova'
          }, {
            "native": 'when',
            foreign: 'quando',
            nativeSentence: 'when i hear that song i think about when i was young',
            foreignSentence: 'quando sento quella canzone penso a quando ero piccolo'
          }, {
            "native": 'time',
            foreign: 'ora',
            nativeSentence: 'what time does the plane leave?',
            foreignSentence: 'a che ora decolla l\'aereo?'
          }, {
            "native": 'did',
            foreign: 'fatto',
            nativeSentence: 'did you have a good trip?',
            foreignSentence: 'hai fatto un buon viaggio?'
          }, {
            "native": 'to be',
            foreign: 'essere',
            nativeSentence: 'it is never too late to be what you could have been',
            foreignSentence: 'non è mai troppo tardi per essere ciò che avresti potuto essere.'
          }, {
            "native": 'know',
            foreign: 'so',
            nativeSentence: 'i know the answer',
            foreignSentence: 'non so se avrò il tempo di farlo'
          }, {
            "native": 'never',
            foreign: 'mai',
            nativeSentence: 'never give up',
            foreignSentence: 'mai rinunciare'
          }, {
            "native": 'who',
            foreign: 'chi',
            nativeSentence: 'who is it?',
            foreignSentence: 'chi é?'
          }, {
            "native": 'or',
            foreign: 'o',
            nativeSentence: 'don\'t pour hot water in to the glass or it will crack',
            foreignSentence: 'non versare acqua calda nel bicchiere o si romperà'
          }, {
            "native": 'at the',
            foreign: 'alla',
            nativeSentence: 'i bought this book at the bookstore',
            foreignSentence: 'ho comprato questo libro alla libreria'
          }, {
            "native": 'very',
            foreign: 'molto',
            nativeSentence: 'italy is a very beautiful country',
            foreignSentence: 'l\'italia è un paese molto bello'
          }, {
            "native": 'also',
            foreign: 'anche',
            nativeSentence: 'excuse me, we\'re in a hurry also',
            foreignSentence: 'scusami, ma abbiamo anche noi fretta'
          }, {
            "native": 'said',
            foreign: 'detto',
            nativeSentence: 'she may have said so',
            foreignSentence: 'potrebbe aver detto ciò'
          }, {
            "native": 'that',
            foreign: 'quello',
            nativeSentence: 'that is not what i heard',
            foreignSentence: 'quello non è ciò che ho sentito io'
          }, {
            "native": 'goes',
            foreign: 'va',
            nativeSentence: 'my father goes to work on a bike',
            foreignSentence: 'mio padre va a lavorare in bici'
          }, {
            "native": 'nothing',
            foreign: 'niente',
            nativeSentence: 'he did nothing wrong',
            foreignSentence: 'non fece niente di male'
          }, {
            "native": 'thank you',
            foreign: 'grazie',
            nativeSentence: 'thank you for your invitation',
            foreignSentence: 'grazie per il vostro invito'
          }, {
            "native": 'he',
            foreign: 'lui',
            nativeSentence: 'he is very tall',
            foreignSentence: 'lui è molto alto'
          }
        ]
      },
      top75phrases: {
        title: 'Phrases For The Top 50 - 75 Words',
        subtitle: 'Phrases for the 50 - 75 most frequently used Italian words',
        data: [
          {
            "native": 'i will speak to him',
            foreign: 'gli voglio parlare'
          }, {
            "native": 'the one who has everything can lose everything',
            foreign: 'chi ha tutto può perdere tutto'
          }, {
            "native": 'celebriamo la festa della mamma in onore delle nostre madri',
            foreign: 'we celebrate mother\'s day in honor of our mothers'
          }, {
            "native": 'what made her so sad?',
            foreign: 'cosa l\'ha resa così triste?'
          }, {
            "native": 'my mother is older than my father',
            foreign: 'mia madre è più vecchio di mio padre'
          }, {
            "native": 'he knows neither french nor german',
            foreign: 'non sa né il francese né il tedesco'
          }, {
            "native": 'this house and this land are mine',
            foreign: 'questa casa e questa terra sono mie'
          }, {
            "native": 'you must be careful not to drop the eggs',
            foreign: 'dovete fare attenzione a non fare cadere le uova'
          }, {
            "native": 'when i hear that song i think about when i was young',
            foreign: 'quando sento quella canzone penso a quando ero piccolo'
          }, {
            "native": 'what time does the plane leave?',
            foreign: 'a che ora decolla l\'aereo?'
          }, {
            "native": 'did you have a good trip?',
            foreign: 'hai fatto un buon viaggio?'
          }, {
            "native": 'it is never too late to be what you could have been',
            foreign: 'non è mai troppo tardi per essere ciò che avresti potuto essere.'
          }, {
            "native": 'i know the answer',
            foreign: 'non so se avrò il tempo di farlo'
          }, {
            "native": 'never give up',
            foreign: 'mai rinunciare'
          }, {
            "native": 'who is it?',
            foreign: 'chi é?'
          }, {
            "native": 'don\'t pour hot water in to the glass or it will crack',
            foreign: 'non versare acqua calda nel bicchiere o si romperà'
          }, {
            "native": 'i bought this book at the bookstore',
            foreign: 'ho comprato questo libro alla libreria'
          }, {
            "native": 'italy is a very beautiful country',
            foreign: 'l\'italia è un paese molto bello'
          }, {
            "native": 'excuse me, we\'re in a hurry also',
            foreign: 'scusami, ma abbiamo anche noi fretta'
          }, {
            "native": 'she may have said so',
            foreign: 'potrebbe aver detto ciò'
          }, {
            "native": 'that\'s not what i heard',
            foreign: 'quello non è ciò che ho sentito io'
          }, {
            "native": 'my father goes to work on a bike',
            foreign: 'mio padre va a lavorare in bici'
          }, {
            "native": 'he did nothing wrong',
            foreign: 'non fece niente di male'
          }, {
            "native": 'thank you for your invitation',
            foreign: 'grazie per il vostro invito'
          }, {
            "native": 'he is very tall',
            foreign: 'lui è molto alto'
          }
        ]
      }
    }
  }
};

x = [
  {
    "native": 'thanks',
    foreign: 'grazie',
    nativeSentence: 'thanks for the help',
    foreignSentence: 'grazie per l\'aiuto'
  }, {
    "native": 'he',
    foreign: 'lui',
    nativeSentence: 'he is eighteen years old',
    foreignSentence: 'lui ha diciotto anni'
  }, {
    "native": 'i want',
    foreign: 'voglio',
    nativeSentence: 'i want a new car',
    foreignSentence: 'voglio una macchina nuova'
  }, {
    "native": 'we have a house',
    foreign: 'abbiamo una casa'
  }, {
    "native": 'we have a car',
    foreign: 'abbiamo un auto'
  }, {
    "native": 'we have an oven',
    foreign: 'abbiamo un forno'
  }, {
    "native": 'state',
    foreign: 'stato',
    nativeSentence: 'the dog was in a state of frenzy',
    foreignSentence: 'il cane era in uno stato di frenesia'
  }, {
    "native": 'in',
    foreign: 'nel',
    nativeSentence: 'throw it in the bucket',
    foreignSentence: 'gettarlo nel secchio'
  }, {
    "native": 'his',
    foreign: 'il suo',
    nativeSentence: 'his favorite flavor',
    foreignSentence: 'il suo gusto preferito'
  }, {
    "native": 'where',
    foreign: 'dove',
    nativeSentence: 'where are my keys',
    foreignSentence: 'dove sono le mie chiavi'
  }, {
    "native": 'i can find',
    foreign: 'posso trovare'
  }, {
    "native": 'i can walk',
    foreign: 'posso camminare'
  }, {
    "native": 'i can live',
    foreign: 'posso abitare'
  }, {
    "native": 'first',
    foreign: 'prima',
    nativeSentence: 'she was the first to finish',
    foreignSentence: 'fu la prima a finire'
  }, {
    "native": 'we are',
    foreign: 'siamo',
    nativeSentence: 'we are all twins',
    foreignSentence: 'siamo tutti gemelli'
  }, {
    "native": 'your',
    foreign: 'tuo',
    nativeSentence: 'your brother is here',
    foreignSentence: 'tuo fratello è qui'
  }, {
    "native": 'they have',
    foreign: 'hanno',
    nativeSentence: 'they have seventeen stereos',
    foreignSentence: 'hanno diciassette impianti stereo'
  }, {
    "native": 'ago',
    foreign: 'fa',
    nativeSentence: 'they started dating eight years ago',
    foreignSentence: 'hanno cominciato a frequentarsi otto anni fa'
  }, {
    "native": 'two',
    foreign: 'due',
    nativeSentence: 'we saw two planes',
    foreignSentence: 'abbiamo visto due aerei'
  }, {
    "native": 'you want',
    foreign: 'vuoi',
    nativeSentence: 'you want three slices?',
    foreignSentence: 'vuoi tre fette?'
  }, {
    "native": 'something',
    foreign: 'qualcosa',
    nativeSentence: 'there is something wrong',
    foreignSentence: 'c\'è qualcosa di sbagliato'
  }, {
    "native": 'true',
    foreign: 'vero',
    nativeSentence: 'is it true?',
    foreignSentence: 'è vero?'
  }, {
    "native": 'home',
    foreign: 'casa',
    nativeSentence: 'i am going home',
    foreignSentence: 'sto andando a casa'
  }, {
    "native": 'on',
    foreign: 'su',
    nativeSentence: 'the man is standing on a mountain',
    foreignSentence: 'uomo è in piedi su una montagna'
  }, {
    "native": 'your',
    foreign: 'tuo',
    nativeSentence: 'what is your favorite movie?',
    foreignSentence: 'qual è il tuo film preferito?'
  }, {
    "native": 'always',
    foreign: 'sempre',
    nativeSentence: 'it is always cold',
    foreignSentence: 'è sempre freddo'
  }, {
    "native": 'perhaps',
    foreign: 'forse',
    nativeSentence: 'perhaps i can help',
    foreignSentence: 'forse mi può aiutare'
  }, {
    "native": 'to say',
    foreign: 'dire',
    nativeSentence: 'i want to say something',
    foreignSentence: 'voglio dire qualcosa'
  }, {
    "native": 'their',
    foreign: 'loro',
    nativeSentence: 'their house is beautiful',
    foreignSentence: 'la loro casa è bella'
  }, {
    "native": 'another',
    foreign: 'un altro',
    nativeSentence: 'can i have another chocolate?',
    foreignSentence: 'posso avere un altro cioccolato?'
  }, {
    "native": 'you know',
    foreign: 'sai',
    nativeSentence: 'do you know his name?',
    foreignSentence: 'sai il suo nome?'
  }, {
    "native": 'i have to walk',
    foreign: 'devo camminare'
  }, {
    "native": 'i have to go',
    foreign: 'devo andare'
  }, {
    "native": 'that',
    foreign: 'quella',
    nativeSentence: 'that lady is happy',
    foreignSentence: 'quella signora è felice'
  }, {
    "native": 'life',
    foreign: 'vita',
    nativeSentence: 'he lived a fun life',
    foreignSentence: 'ha vissuto una vita divertente'
  }, {
    "native": 'that',
    foreign: 'quel',
    nativeSentence: 'that cat is fast',
    foreignSentence: 'quel gatto è veloce'
  }, {
    "native": 'time',
    foreign: 'tempo',
    nativeSentence: 'do we have enough time?',
    foreignSentence: 'abbiamo abbastanza tempo?'
  }, {
    "native": 'to go',
    foreign: 'andare',
    nativeSentence: 'he wants to go to the movies',
    foreignSentence: 'vuole andare al cinema'
  }, {
    "native": 'sure',
    foreign: 'certo'
  }, {
    "native": 'then',
    foreign: 'poi',
    nativeSentence: 'we went to dinner and then went to a concert',
    foreignSentence: 'siamo andati a cena e poi è andato a un concerto'
  }, {
    "native": 'man',
    foreign: 'uomo',
    nativeSentence: 'a man stole my purse',
    foreignSentence: 'un uomo ha rubato la mia borsa'
  }, {
    "native": 'sir',
    foreign: 'signore',
    nativeSentence: 'excuse me sir',
    foreignSentence: 'mi scusi signore'
  }, {
    "native": 'a little',
    foreign: 'un po',
    nativeSentence: 'can we have some candy?',
    foreignSentence: 'possiamo avere un po \'di caramelle?'
  }, {
    "native": 'i can',
    foreign: 'può',
    nativeSentence: 'i can talk for hours',
    foreignSentence: 'può parlare per ore'
  }, {
    "native": 'i think',
    foreign: 'credo',
    nativeSentence: 'i believe she is correct',
    foreignSentence: 'credo che sia corretto'
  }, {
    "native": 'already',
    foreign: 'già',
    nativeSentence: 'he already has three dogs',
    foreignSentence: 'che ha già tre cani'
  }, {
    "native": 'now',
    foreign: 'adesso',
    nativeSentence: 'i need to leave now',
    foreignSentence: 'ho bisogno di partire adesso'
  }, {
    "native": 'let\'s go',
    foreign: 'andiamo',
    nativeSentence: 'let\'s go to the park',
    foreignSentence: 'andiamo al parco'
  }, {
    "native": 'years',
    foreign: 'anni',
    nativeSentence: 'he is twelve years old',
    foreignSentence: 'lui ha dodici anni'
  }, {
    "native": 'seen',
    foreign: 'visto',
    nativeSentence: 'have you seen my keys',
    foreignSentence: 'avete visto le mie chiavi'
  }, {
    "native": 'outside',
    foreign: 'fuori',
    nativeSentence: 'let\'s go for a hike outside',
    foreignSentence: 'andiamo a fare una passeggiata fuori'
  }, {
    "native": 'only one',
    foreign: 'solo uno',
    nativeSentence: 'only one for me',
    foreignSentence: 'solo uno per me'
  }, {
    "native": 'how long',
    foreign: 'quanto tempo',
    nativeSentence: 'how long until you graduate?',
    foreignSentence: 'quanto tempo fino a laurearsi?'
  }, {
    "native": 'one time',
    foreign: 'una volta',
    nativeSentence: 'i\'ve only seen that movie one time',
    foreignSentence: 'ho solo visto quel film una sola volta'
  }, {
    "native": 'will be',
    foreign: 'sarà',
    nativeSentence: 'climbing a mountain will always be a goal',
    foreignSentence: 'scalare una montagna sarà sempre un obiettivo'
  }, {
    "native": 'after',
    foreign: 'dopo',
    nativeSentence: 'let\s go to the park after the movie',
    foreignSentence: 'andiamo al parco dopo il film'
  }, {
    "native": 'without',
    foreign: 'senza',
    nativeSentence: 'i\'m not leaving without you',
    foreignSentence: 'non me ne vado senza di te'
  }, {
    "native": 'things',
    foreign: 'cose',
    nativeSentence: 'too many things can go wrong',
    foreignSentence: 'troppe cose possono andare storte'
  }, {
    "native": 'nobody',
    foreign: 'nessuno',
    nativeSentence: 'so nobody heard anything?',
    foreignSentence: 'quindi nessuno ha sentito niente?'
  }, {
    "native": 'day',
    foreign: 'giorno',
    nativeSentence: 'every day i learn something new',
    foreignSentence: 'ogni giorno imparo qualcosa di nuovo'
  }, {
    "native": 'best',
    foreign: 'meglio',
    nativeSentence: 'do your best',
    foreignSentence: 'fate del vostro meglio'
  }, {
    "native": 'father',
    foreign: 'padre',
    nativeSentence: 'my father is sixty years old',
    foreignSentence: 'mio padre ha sessanta anni'
  }, {
    "native": 'you can',
    foreign: 'puoi',
    nativeSentence: 'you can do this',
    foreignSentence: 'puòi fare questo'
  }, {
    "native": 'hello',
    foreign: 'ciao',
    nativeSentence: 'hello my friend',
    foreignSentence: 'ciao amico mio'
  }, {
    "native": 'you need to',
    foreign: 'devi',
    nativeSentence: 'you need to do this for me',
    foreignSentence: 'è necessario fare questo per me'
  }, {
    "native": 'here',
    foreign: 'ecco',
    nativeSentence: 'here is the cat',
    foreignSentence: 'ecco qui il gatto'
  }, {
    "native": 'someone',
    foreign: 'qualcuno',
    nativeSentence: 'i know someone who can help',
    foreignSentence: 'conosco qualcuno che può aiutare'
  }, {
    "native": 'work',
    foreign: 'lavoro',
    nativeSentence: 'i have a lot of work to do',
    foreignSentence: 'ho un sacco di lavoro da fare'
  }, {
    "native": 'he knows',
    foreign: 'sa',
    nativeSentence: 'he knows who you are',
    foreignSentence: 'sa chi sei'
  }, {
    "native": 'to',
    foreign: 'ai',
    nativeSentence: 'i\'m going to the markets',
    foreignSentence: 'io vado ai mercati'
  }, {
    "native": 'to see',
    foreign: 'vedere',
    nativeSentence: 'i\'d like to see that one day',
    foreignSentence: 'mi piacerebbe vedere che un giorno'
  }, {
    "native": 'every',
    foreign: 'ogni',
    nativeSentence: 'i think about her every day',
    foreignSentence: 'ogni giorno penso a lei'
  }, {
    "native": 'too much',
    foreign: 'troppo',
    nativeSentence: 'how much is too much?',
    foreignSentence: 'quanto è troppo?'
  }, {
    "native": 'i missed you so much',
    foreign: 'mi sei mancato molto'
  }, {
    "native": 'good morning',
    foreign: 'buongiorno'
  }, {
    "native": 'good evening',
    foreign: 'buona sera'
  }, {
    "native": 'how are you?',
    foreign: 'come stai?'
  }, {
    "native": 'goodbye',
    foreign: 'arrivederci'
  }, {
    "native": 'what a shame',
    foreign: 'che peccato'
  }, {
    "native": 'i can\'t believe it',
    foreign: 'non ci posso credere'
  }, {
    "native": 'what time is it?',
    foreign: 'che ore sono?'
  }, {
    "native": 'can you help me?',
    foreign: 'mi puoi aiutare?'
  }, {
    "native": 'i\'m running late',
    foreign: 'sono in ritardo'
  }, {
    "native": 'how\'s your family?',
    foreign: 'come sta la tua famiglia?'
  }, {
    "native": 'where do you work?',
    foreign: 'dove lavori?'
  }, {
    "native": 'where are you from?',
    foreign: 'di dove sei?'
  }, {
    "native": 'are you from around here?',
    foreign: 'sei di qui?'
  }, {
    "native": 'where do you live?',
    foreign: 'dove vivi?'
  }, {
    "native": 'how old are you?',
    foreign: 'quanti anni hai?'
  }, {
    "native": 'what\'s your phone number?',
    foreign: 'qual\'è il tuo numero di telefono?'
  }, {
    "native": 'what do you like to do?',
    foreign: 'cosa ti piace fare?'
  }, {
    "native": 'i need to use the restroom',
    foreign: 'devo andare in bagno'
  }, {
    "native": 'i\'ll be right back',
    foreign: 'torno subito'
  }, {
    "native": 'please repeat',
    foreign: 'ripeti, per favore'
  }, {
    "native": 'are you kidding?',
    foreign: 'stai scherzando?'
  }, {
    "native": 'just kidding',
    foreign: 'scherzo'
  }, {
    "native": 'talk to you later',
    foreign: 'ci sentiamo dopo'
  }, {
    "native": 'see you soon',
    foreign: 'a presto'
  }, {
    "native": 'the cat loves to sing and dance',
    foreign: 'il gatto ama cantare e ballare'
  }, {
    "native": 'the man walked down the street',
    foreign: 'l\'uomo camminava per la strada'
  }, {
    "native": 'how many apples are there?',
    foreign: 'quante mele ci sono?'
  }, {
    "native": 'i know how to play guitar',
    foreign: 'so come suonare la chitarra'
  }, {
    "native": 'she can run a mile very quickly',
    foreign: 'lei può eseguire un miglio molto rapidamente'
  }, {
    "native": 'that pizza is fantastic',
    foreign: 'quella pizza è fantastico'
  }, {
    "native": 'it\'s a beautiful day outside',
    foreign: 'è una bella giornata fuori'
  }, {
    "native": 'where were you?',
    foreign: 'dove eravate?'
  }, {
    "native": 'bright light',
    foreign: 'luce brillante'
  }, {
    "native": 'red carpet',
    foreign: 'tappeto rosso'
  }, {
    "native": 'heavy door',
    foreign: 'pesante porta'
  }, {
    "native": 'messy bedroom',
    foreign: 'camera da letto disordinato'
  }, {
    "native": 'the bird flew fast',
    foreign: 'l\'uccello volò veloce'
  }, {
    "native": 'be careful with the sharp knife',
    foreign: 'stare attenti con il coltello affilato'
  }, {
    "native": 'eat your vegetables',
    foreign: 'mangiare le verdure'
  }, {
    "native": 'the steak was juicy',
    foreign: 'la bistecca era succosa'
  }, {
    "native": 'i am hungry',
    foreign: 'ho fame'
  }, {
    "native": 'i am tired',
    foreign: 'sono stanco'
  }, {
    "native": 'he was very sleepy',
    foreign: 'era molto sonno'
  }, {
    "native": 'he failed his test',
    foreign: 'ha fallito la sua prova'
  }, {
    "native": 'they are late',
    foreign: 'sono in ritardo'
  }, {
    "native": 'a lot of money',
    foreign: 'un sacco di soldi'
  }, {
    "native": 'exercise is healthy',
    foreign: 'esercizio è sano'
  }, {
    "native": 'where is it?',
    foreign: 'dov\'è?'
  }, {
    "native": 'where are you going?',
    foreign: 'dove va?'
  }, {
    "native": 'when does the museum open?',
    foreign: 'quando apre il museo?'
  }, {
    "native": 'when does the train arrive?',
    foreign: 'quando arriva il treno?'
  }, {
    "native": 'how much is that?',
    foreign: 'quanto costa?'
  }, {
    "native": 'how many are there?',
    foreign: 'quanti ce ne sono?'
  }, {
    "native": 'why is that?',
    foreign: 'perchè?'
  }, {
    "native": 'why not?',
    foreign: 'perchè no?'
  }, {
    "native": 'who\'s there?',
    foreign: 'chi è?'
  }, {
    "native": 'who is it for?',
    foreign: 'chi è per?'
  }, {
    "native": 'which one do you want?',
    foreign: 'quale vuole?'
  }, {
    "native": 'when are the stores open?',
    foreign: 'quando hanno luogo i negozi aperti?'
  }, {
    "native": 'whose is that?',
    foreign: 'di chi è quello?'
  }, {
    "native": 'how would you like to pay?',
    foreign: 'come desidera pagare?'
  }, {
    "native": 'how are you getting here?',
    foreign: 'come arriva qui?'
  }, {
    "native": 'is it free?',
    foreign: 'è libero?'
  }, {
    "native": 'are there any buses going into town?',
    foreign: 'ci sono autobus per il centro?'
  }, {
    "native": 'can i have this?',
    foreign: 'posso avere questo?'
  }, {
    "native": 'can we have that?',
    foreign: 'possiamo avere quello?'
  }, {
    "native": 'can you show me that?',
    foreign: 'potete mostrarmi quello?'
  }, {
    "native": 'can i help you?',
    foreign: 'posso aiutare?'
  }, {
    "native": 'can you help me?',
    foreign: 'può aiutarmi?'
  }, {
    "native": 'how are you?',
    foreign: 'come sta?'
  }, {
    "native": 'whose handbag is that?',
    foreign: 'di chi borsa è quella?'
  }, {
    "native": 'do you speak english?',
    foreign: 'parla inglese?'
  }, {
    "native": 'can you speak more slowly?',
    foreign: 'può parlare più lentamente?'
  }, {
    "native": 'can you repeat that?',
    foreign: 'può repetere'
  }, {
    "native": 'what was that?',
    foreign: 'cosa ha detto?'
  }, {
    "native": 'i understand.',
    foreign: 'capisco.'
  }, {
    "native": 'i don\'t understand.',
    foreign: 'non capisco.'
  }, {
    "native": 'do you understand?',
    foreign: 'capisce?'
  }, {
    "native": 'could you spell it?',
    foreign: 'come si scrive?'
  }, {
    "native": 'can you translate this for me?',
    foreign: 'può tradurre questo?'
  }, {
    "native": 'what does this mean?',
    foreign: 'cosa significa questo?'
  }, {
    "native": 'please write it down.',
    foreign: 'la scriva per piacere.'
  }, {
    "native": 'when is the first flight?',
    foreign: 'quando parte il primo volo?'
  }, {
    "native": 'when is the next flight?',
    foreign: 'quando parte il prossimo volo?'
  }, {
    "native": 'when is the last flight?',
    foreign: 'quando parte l\'ultimo volo?'
  }, {
    "native": 'i\'d like one round-trip ticket',
    foreign: 'vorrei un di andata e ritorno biglietto'
  }, {
    "native": 'i\'d like three one-way tickets',
    foreign: 'vorrei tre di andata biglietti'
  }, {
    "native": 'i\'d like four economy class tickets.',
    foreign: 'vorrei quattro classe turistica biglietti.'
  }, {
    "native": 'i\'d like two business class tickets.',
    foreign: 'vorrei due business class biglietti.'
  }, {
    "native": 'i\'d like one first class ticket.',
    foreign: 'vorrei un prima classe biglietti.'
  }, {
    "native": 'how much is a flight to paris?',
    foreign: 'quanto costa il volo per parigi?'
  }, {
    "native": 'i\'d like to confirm my reservation',
    foreign: 'vorrei confirmare la mia prenotazione.'
  }, {
    "native": 'i\'d like to change my reservation.',
    foreign: 'vorrei cambiare la mia prenotazione.'
  }, {
    "native": 'i\'d like to cancel my reservation.',
    foreign: 'vorrei anullare la mia prenotazione.'
  }, {
    "native": 'what time do i have to check in?',
    foreign: 'a che ora devo registrare i bagagli?'
  }, {
    "native": 'how long is the flight?',
    foreign: 'quanto dura il volo?'
  }, {
    "native": 'what time does the plane leave?',
    foreign: 'a che ora decolla l\'aereo?'
  }, {
    "native": 'what time do we arrive?',
    foreign: 'a che ora arriveremo?'
  }, {
    "native": 'which gate does the flight depart from?',
    foreign: 'da quale uscita parte il volo?'
  }, {
    "native": 'has the flight landed?',
    foreign: 'è atteratto il volo?'
  }, {
    "native": 'how late will the flight be?',
    foreign: 'di quanto ritarderà il volo?'
  }
];

/*
\d+.\s+(\w+).+\n
: '$1'\n



'The apple is red'
'It is John\'s apple'
'I give John the apple'
'We want to give him the apple'
'He gives it to John'
'She gives it to him'
*/

