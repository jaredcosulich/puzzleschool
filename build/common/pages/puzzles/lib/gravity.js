// Generated by CoffeeScript 1.3.3
var gravity;

gravity = typeof exports !== "undefined" && exports !== null ? exports : provide('./lib/gravity', {});

gravity.ViewHelper = (function() {

  ViewHelper.prototype.MAX_RADIUS = 25;

  function ViewHelper(_arg) {
    this.el = _arg.el;
    this.initGravityWell();
  }

  ViewHelper.prototype.$ = function(selector) {
    return $(selector, this.el);
  };

  ViewHelper.prototype.initGravityWell = function() {
    var _this = this;
    this.modifyWells();
    return this.el.bind('mousedown.well', function(e) {
      var well;
      well = _this.createWell(e.offsetX, e.offsetY);
      _this.growWell(well);
      return _this.el.bind('mouseup.well', function(e) {
        return _this.shrinkWell(well);
      });
    });
  };

  ViewHelper.prototype.createWell = function(x, y) {
    var well;
    well = $(document.createElement('DIV'));
    well.addClass('well');
    well.css({
      left: x,
      top: y
    });
    well.data('radius', 0);
    $('.wells').append(well);
    return well;
  };

  ViewHelper.prototype.deleteWell = function(well) {
    return well.remove();
  };

  ViewHelper.prototype.modifyWells = function() {
    var grow, radius, well, wellElement, _i, _len, _ref,
      _this = this;
    _ref = $('.wells .well');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      wellElement = _ref[_i];
      well = $(wellElement);
      radius = parseInt(well.data('radius') || 0);
      grow = well.data('grow');
      if (!grow) {
        continue;
      }
      radius += parseInt(grow);
      if (radius > this.MAX_RADIUS) {
        this.stopWell(well);
        continue;
      }
      if (radius < 0) {
        this.deleteWell(well);
        continue;
      }
      well.css({
        boxShadow: "0px 0 " + (radius * 2) + "px " + radius + "px rgba(255,255,255,0.8)"
      });
      well.data('radius', radius);
    }
    return setTimeout((function() {
      return _this.modifyWells();
    }), 10);
  };

  ViewHelper.prototype.growWell = function(well) {
    return well.data('grow', 1);
  };

  ViewHelper.prototype.shrinkWell = function(well) {
    return well.data('grow', -1);
  };

  ViewHelper.prototype.stopWell = function(well) {
    return well.data('grow', null);
  };

  return ViewHelper;

})();
