// Generated by CoffeeScript 1.3.3
var xyflyer;

xyflyer = typeof exports !== "undefined" && exports !== null ? exports : provide('./lib/xyflyer', {});

xyflyer.ChunkHelper = (function() {

  function ChunkHelper() {}

  return ChunkHelper;

})();

xyflyer.ViewHelper = (function() {

  ViewHelper.prototype.baseFolder = '/assets/images/puzzles/xyflyer/';

  function ViewHelper(_arg) {
    var canvas;
    this.el = _arg.el, canvas = _arg.canvas, this.grid = _arg.grid;
    this.canvas = $(canvas);
    if (this.canvas && this.canvas[0].getContext) {
      this.context = this.canvas[0].getContext('2d');
    }
    this.initCanvas();
  }

  ViewHelper.prototype.$ = function(selector) {
    return $(selector, this.el);
  };

  ViewHelper.prototype.initCanvas = function() {
    this.width = this.canvas[0].width = this.canvas.width();
    return this.height = this.canvas[0].height = this.canvas.height();
  };

  ViewHelper.prototype.plot = function(formula) {
    var brokenLine, plotted, xPos, xUnit, yPos, yUnit, _i, _ref, _ref1;
    this.initCanvas();
    this.context.strokeStyle = '#00ED00';
    this.context.lineWidth = 2;
    xPos = 0;
    brokenLine = 1;
    plotted = 0;
    this.context.beginPath();
    xUnit = this.xUnit();
    yUnit = this.yUnit();
    for (xPos = _i = _ref = this.width / -2, _ref1 = this.width / 2; _i <= _ref1; xPos = _i += 1) {
      yPos = formula(xPos / xUnit) * yUnit;
      this.context.lineTo(xPos + (this.width / 2), (this.height / 2) - yPos);
    }
    this.context.stroke();
    return this.context.closePath();
  };

  ViewHelper.prototype.xUnit = function() {
    return this.width / (this.grid.xMax - this.grid.xMin);
  };

  ViewHelper.prototype.yUnit = function() {
    return this.height / (this.grid.yMax - this.grid.yMin);
  };

  return ViewHelper;

})();
