// Generated by CoffeeScript 1.3.3
var Client, Transformer, component;

component = typeof exports !== "undefined" && exports !== null ? exports : provide('./component', {});

Transformer = require('../common_objects/transformer').Transformer;

Client = require('../common_objects/client').Client;

component.Component = (function() {

  function Component(_arg) {
    this.container = _arg.container, this.drag = _arg.drag;
    this.el = $(document.createElement('DIV'));
    this.container.append(this.el);
  }

  Component.prototype.$ = function(selector) {
    return this.el.find(selector);
  };

  Component.prototype.initDrag = function() {
    var _this = this;
    this.transformer = new Transformer(this.el);
    return this.draggable.bind('mousedown.drag touchstart.drag', function(e) {
      var startX, startY;
      startX = Client.x(e);
      startY = Client.y(e);
      $(document.body).bind('mousemove.drag touchstart.drag', function(e) {
        var currentX, currentY;
        currentX = Client.x(e);
        currentY = Client.y(e);
        _this.transformer.translate(currentX - startX, currentY - startY);
        return _this.drag(_this, currentX, currentY);
      });
      return $(document.body).one('mouseup.drag touchend.drag', function(e) {
        $(document.body).unbind('mousemove.drag touchstart.drag');
        if (_this.transformer.dx && _this.transformer.dy) {
          _this.drag(_this, Client.x(e), Client.y(e), true);
          return _this.transformer.translate(0, 0);
        }
      });
    });
  };

  return Component;

})();
