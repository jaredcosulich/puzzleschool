// Generated by CoffeeScript 1.3.3
var Component, operator,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

operator = typeof exports !== "undefined" && exports !== null ? exports : provide('./operator', {});

Component = require('./component').Component;

operator.Operator = (function(_super) {

  __extends(Operator, _super);

  function Operator(_arg) {
    var container, drag;
    this.value = _arg.value, container = _arg.container, drag = _arg.drag;
    Operator.__super__.constructor.call(this, {
      container: container,
      drag: drag
    });
    this.init();
    this.draggable = this.el;
    this.initDrag();
  }

  Operator.prototype.init = function() {
    var label;
    this.el.addClass('operator');
    label = this.value;
    if (this.value === '*') {
      label = '&times;';
    }
    return this.el.html("<h3><span class='value'>" + this.value + "</span></h3>");
  };

  return Operator;

})(Component);
