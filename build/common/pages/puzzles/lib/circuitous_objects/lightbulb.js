// Generated by CoffeeScript 1.3.3
var Tag, circuitousObject, lightbulb,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

lightbulb = typeof exports !== "undefined" && exports !== null ? exports : provide('./lightbulb', {});

circuitousObject = require('./object');

Tag = require('./tag').Tag;

lightbulb.Lightbulb = (function(_super) {

  __extends(Lightbulb, _super);

  Lightbulb.prototype.resistance = 5;

  Lightbulb.prototype.dragBuffer = {
    left: 27,
    right: 21
  };

  Lightbulb.prototype.centerOffset = {
    x: -17,
    y: 30
  };

  Lightbulb.prototype.nodes = [
    {
      x: -15,
      y: 34
    }, {
      x: 17,
      y: 34
    }
  ];

  function Lightbulb(_arg) {
    this.recordChange = _arg.recordChange;
  }

  Lightbulb.prototype.initCurrent = function() {
    this.currentImage = $(document.createElement('div'));
    this.currentImage.addClass('current_image');
    this.currentImage.css({
      width: 150,
      height: 150,
      backgroundImage: "url('" + (this.image().replace('.png', '_current_spritesheet.png')) + "')",
      backgroundPosition: '0 0',
      bottom: 0
    });
    this.el.append(this.currentImage);
    return this.setCurrent(0);
  };

  Lightbulb.prototype.setCurrent = function(current, permanent) {
    var currentStep, left, spriteIndex;
    this.current = current;
    if (permanent == null) {
      permanent = false;
    }
    Lightbulb.__super__.setCurrent.call(this, this.current);
    if (!this.currentImage) {
      return;
    }
    this.current || (this.current = 0);
    left = (this.el.width() / 2) - (this.currentImage.width() / 2);
    if (parseInt(this.currentImage.css('left')) !== left) {
      this.currentImage.css({
        left: left
      });
    }
    currentStep = 0.45;
    spriteIndex = Math.floor(Math.abs(this.current) / currentStep);
    if (spriteIndex > 9) {
      spriteIndex = 9;
    }
    if (this.spriteIndex !== spriteIndex) {
      if ((this.spriteIndex === void 0) || permanent) {
        this.spriteIndex = spriteIndex;
      }
      if (spriteIndex !== this.spriteIndex) {
        this.spriteIndex += (spriteIndex > this.spriteIndex ? 1 : -1);
      }
      return this.currentImage.css({
        backgroundPosition: "-" + (this.spriteIndex * this.currentImage.width()) + "px 0",
        opacity: 1.0 - (0.6 / (this.spriteIndex || 1))
      });
    }
  };

  Lightbulb.prototype.getInfo = function() {};

  return Lightbulb;

})(circuitousObject.Object);
