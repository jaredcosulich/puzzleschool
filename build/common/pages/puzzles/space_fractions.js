// Generated by CoffeeScript 1.3.3
var soma, wings;

soma = require('soma');

wings = require('wings');

soma.chunks({
  SpaceFractions: {
    meta: function() {
      return new soma.chunks.Base({
        content: this
      });
    },
    prepare: function(_arg) {
      this.levelName = _arg.levelName;
      this.template = this.loadTemplate("/build/common/templates/puzzles/space_fractions.html");
      this.loadScript('/build/common/pages/puzzles/lib/space_fractions.js');
      if (this.levelName === 'editor') {
        this.loadScript('/build/common/pages/puzzles/lib/space_fractions_editor.js');
      }
      return this.loadStylesheet('/build/client/css/puzzles/space_fractions.css');
    },
    build: function() {
      var object, objectImages, row, rows, spaceFractions, state, _i, _len, _ref;
      this.setTitle("Space Fractions - The Puzzle School");
      spaceFractions = require('./lib/space_fractions');
      this.chunkHelper = new spaceFractions.ChunkHelper();
      objectImages = [];
      for (object in this.chunkHelper.objects) {
        if (this.chunkHelper.objects[object].states) {
          _ref = ['empty', 'under', 'full', 'over'];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            state = _ref[_i];
            objectImages.push(this.chunkHelper.objects[object].image + ("_" + state));
          }
        } else {
          objectImages.push(this.chunkHelper.objects[object].image);
        }
      }
      rows = (function() {
        var _j, _results;
        _results = [];
        for (row = _j = 0; _j < 10; row = ++_j) {
          _results.push({
            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
          });
        }
        return _results;
      })();
      return this.html = wings.renderTemplate(this.template, {
        levelName: this.levelName || '',
        custom: this.levelName === 'custom',
        rows: rows,
        objectImages: objectImages
      });
    }
  }
});

soma.views({
  SpaceFractions: {
    selector: '#content .space_fractions',
    create: function() {
      var level, levelName, spaceFractions, spaceFractionsEditor,
        _this = this;
      spaceFractions = require('./lib/space_fractions');
      this.viewHelper = new spaceFractions.ViewHelper({
        el: $(this.selector),
        rows: 10,
        columns: 10
      });
      levelName = this.el.data('level_name');
      if (levelName === 'editor') {
        spaceFractionsEditor = require('./lib/space_fractions_editor');
        this.editor = new spaceFractionsEditor.EditorHelper({
          el: $(this.selector),
          viewHelper: this.viewHelper
        });
      } else if (levelName === 'custom') {
        this.$('.load_to_play').bind('click', function() {
          return _this.viewHelper.loadToPlay(_this.$('.level_description').val());
        });
      }
      if (window.location.hash) {
        level = decodeURIComponent(window.location.hash.replace(/^#/, ''));
        if (levelName === 'editor') {
          this.editor.levelDescription.val(level);
          return this.editor.load();
        } else {
          return this.viewHelper.loadToPlay(level);
        }
      }
    }
  }
});

soma.routes({
  '/puzzles/space_fractions/:levelName': function(_arg) {
    var levelName;
    levelName = _arg.levelName;
    return new soma.chunks.SpaceFractions({
      levelName: levelName
    });
  },
  '/puzzles/space_fractions': function() {
    return new soma.chunks.SpaceFractions;
  }
});
