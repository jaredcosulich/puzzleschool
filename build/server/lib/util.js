// Generated by CoffeeScript 1.3.3

exports.combineChunks = function(chunks) {
  var chunk, result, size, _i, _j, _len, _len1;
  size = 0;
  for (_i = 0, _len = chunks.length; _i < _len; _i++) {
    chunk = chunks[_i];
    size += chunk.length;
  }
  result = new Buffer(size);
  size = 0;
  for (_j = 0, _len1 = chunks.length; _j < _len1; _j++) {
    chunk = chunks[_j];
    chunk.copy(result, size, 0);
    size += chunk.length;
  }
  return result;
};

Array.prototype.unique = function() {
  var i, l, o, r, _i;
  o = {};
  l = this.length;
  r = [];
  for (i = _i = 0; 0 <= l ? _i < l : _i > l; i = 0 <= l ? ++_i : --_i) {
    o[this[i]] = this[i];
  }
  for (i in o) {
    r.push(o[i]);
  }
  return r;
};

Array.prototype.shuffle = function() {
  var current, tmp, top, _results;
  top = this.length;
  if (!top) {
    return this;
  }
  _results = [];
  while (top--) {
    current = Math.floor(Math.random() * (top + 1));
    tmp = this[current];
    this[current] = this[top];
    _results.push(this[top] = tmp);
  }
  return _results;
};
